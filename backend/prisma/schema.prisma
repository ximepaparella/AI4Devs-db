generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Candidate {
  id              Int              @id @default(autoincrement())
  firstName       String           @db.VarChar(100)
  lastName        String           @db.VarChar(100)
  email           String           @unique @db.VarChar(255)
  phone           String?          @db.VarChar(15)
  address         String?          @db.VarChar(100)
  applications    Application[]
  educations      Education[]
  resumes         Resume[]
  workExperiences WorkExperience[]
}

model Education {
  id          Int       @id @default(autoincrement())
  institution String    @db.VarChar(100)
  title       String    @db.VarChar(250)
  startDate   DateTime
  endDate     DateTime?
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
}

model WorkExperience {
  id          Int       @id @default(autoincrement())
  company     String    @db.VarChar(100)
  position    String    @db.VarChar(100)
  description String?   @db.VarChar(200)
  startDate   DateTime
  endDate     DateTime?
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
}

model Resume {
  id          Int       @id @default(autoincrement())
  filePath    String    @db.VarChar(500)
  fileType    String    @db.VarChar(50)
  uploadDate  DateTime
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(100)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isActive  Boolean    @default(true)
  employees Employee[]
  positions Position[]

  @@index([name])
}

model Employee {
  id         Int         @id @default(autoincrement())
  companyId  Int
  name       String      @db.VarChar(100)
  email      String      @unique @db.VarChar(255)
  role       String      @db.VarChar(50)
  isActive   Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  company    Company     @relation(fields: [companyId], references: [id])
  interviews Interview[]

  @@index([email])
  @@index([companyId])
}

model Position {
  id                  Int           @id @default(autoincrement())
  companyId           Int
  interviewFlowId     Int
  title               String        @db.VarChar(100)
  description         String
  status              String        @db.VarChar(50)
  isVisible           Boolean       @default(true)
  location            String        @db.VarChar(100)
  jobDescription      String
  requirements        String
  responsibilities    String
  salaryMin           Decimal       @db.Decimal(10, 2)
  salaryMax           Decimal       @db.Decimal(10, 2)
  employmentType      String        @db.VarChar(50)
  benefits            String
  companyDescription  String
  applicationDeadline DateTime
  contactInfo         String        @db.VarChar(255)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  applications        Application[]
  company             Company       @relation(fields: [companyId], references: [id])
  interviewFlow       InterviewFlow @relation(fields: [interviewFlowId], references: [id])

  @@index([companyId])
  @@index([title])
  @@index([location])
  @@index([status])
}

model InterviewFlow {
  id          Int             @id @default(autoincrement())
  name        String          @db.VarChar(100)
  description String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  isActive    Boolean         @default(true)
  steps       InterviewStep[]
  positions   Position[]

  @@index([name])
}

model InterviewStep {
  id              Int           @id @default(autoincrement())
  interviewFlowId Int
  interviewTypeId Int
  name            String        @db.VarChar(100)
  orderIndex      Int
  duration        Int           @default(60)
  isRequired      Boolean       @default(true)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  interviews      Interview[]
  interviewFlow   InterviewFlow @relation(fields: [interviewFlowId], references: [id])
  interviewType   InterviewType @relation(fields: [interviewTypeId], references: [id])

  @@index([interviewFlowId])
  @@index([interviewTypeId])
  @@index([orderIndex])
}

model InterviewType {
  id          Int             @id @default(autoincrement())
  name        String          @db.VarChar(100)
  description String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  steps       InterviewStep[]

  @@index([name])
}

model Application {
  id              Int         @id @default(autoincrement())
  positionId      Int
  candidateId     Int
  status          String      @db.VarChar(50)
  applicationDate DateTime    @default(now())
  notes           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  currentStep     Int?
  candidate       Candidate   @relation(fields: [candidateId], references: [id])
  position        Position    @relation(fields: [positionId], references: [id])
  interviews      Interview[]

  @@index([positionId])
  @@index([candidateId])
  @@index([status])
  @@index([applicationDate])
}

model Interview {
  id              Int           @id @default(autoincrement())
  applicationId   Int
  interviewStepId Int
  employeeId      Int
  scheduledDate   DateTime
  status          String        @db.VarChar(50)
  result          String?       @db.VarChar(50)
  score           Int?
  notes           String?
  feedback        String?
  duration        Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  application     Application   @relation(fields: [applicationId], references: [id])
  employee        Employee      @relation(fields: [employeeId], references: [id])
  interviewStep   InterviewStep @relation(fields: [interviewStepId], references: [id])

  @@index([applicationId])
  @@index([interviewStepId])
  @@index([employeeId])
  @@index([scheduledDate])
  @@index([status])
}
